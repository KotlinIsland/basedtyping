[tool.poetry]
authors = ["DetachHead <detachhead@users.noreply.github.com>"]
description = ""
name = "basedtyping"
version = "0.1.0"

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.dev-dependencies]
black = "^21.9b0"
flake8 = "^3.9.2"
# https://github.com/KotlinIsland/basedmypy/pull/131
basedmypy = { git = "https://github.com/KotlinIsland/basedmypy.git", rev = "e5d40fc37d8d6eca75d8784020d82b4574b042b7" }
pylint = "^2.11.1"
pytest = "^6.2.5"
isort = "^5.10.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.mypy]
allow_redefinition = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.isort]
profile = "black"
multi_line_output = 3
combine_as_imports = true

[tool.black]
target-version = ["py310"]

[tool.pylint.MASTER]
fail-on = "I"

[tool.pylint."MESSAGE CONTROL"]
disable = [
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "invalid-name",               # https://github.com/PyCQA/pylint/issues/3401
    "fixme",
    "useless-import-alias",       # required when using no-implicit-reexport in mypy
    "no-member",                  # handled by mypy
    "inherit-non-class",          # handled by mypy, false positive on ReifiedGeneric
    "too-few-public-methods",
    "unused-import",              # false negatives + handled by flake8
    "duplicate-code",             # https://github.com/PyCQA/pylint/issues/214
]
enable = ["useless-suppression", "deprecated-pragma"]

[tool.pylint.FORMAT]
max-line-length = 200

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"

